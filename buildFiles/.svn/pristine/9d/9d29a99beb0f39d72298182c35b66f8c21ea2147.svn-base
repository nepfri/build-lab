<?xml version="1.0" encoding="UTF-8"?>
<project name="mmr" default="main" basedir=".">

	<property name="workspace.dir" location="${basedir}/.." /> 
	<property name="build.prop.dir" location="${workspace.dir}" /> 
	<property file="${build.prop.dir}/build.properties" /> 
	<property file="${mmr.version.file}"/>
	<property name="minor" value="${build.minor.version}"/>
	<property name="patch" value="${build.patch.version}"/>

	<!-- directory structure -->
	<property name="mmrSrc" location="${src.dir}"/>
	<property name="mmrOutput" location="${compiled.dir}"/>
	<property name="mmrWar" location="${dest.dir}"/>

	<!-- mmr directories -->
	<property name="webXML" location="${basedir}/web/WEB-INF"/>
	<property name="webDir" location="${basedir}/web"/>
	<property name="libDir" location="${webXML}/lib"/>
	
	
	<!-- jar files needed for compilation-->
	<property name="mmrLib" location="${mmr.lib}"/>
	<property name="commonLib" location="${common.lib}"/>
	
	<property name="ntdps.jar" location="${ntdps.jar}"/>
	<property name="ntdpsBuildInfo" location="${ntdps.project}/ntdpsAPIWebServiceBuildInfo.txt"/>
	<property name="snadis.jar" location="${snadis.jar}"/>
	<property name="snadisBuildInfo" location="${snadis.project}/snadisCommonBuildInfo.txt"/>
	
	
	<path id="classpath">
		<pathelement location="${snadis.jar}"/>
		<fileset dir="${mmrLib}"></fileset>
		<fileset dir="${commonLib}"></fileset>
		<pathelement location="${snadis.jar}" />
		<pathelement location="${ntdps.jar}" />
	</path>
	
	<target name="main" depends="createWar">
		<echo>
			Finishing with MMR
		</echo>
	</target>
	
	<target name="clean">
		<delete dir="${libDir}"/>
		<delete dir="${mmrWar}"/>
		<delete dir="${mmrOutput}"/>
	</target>
	
	<target name="init" depends="clean, buildNumber">
		<tstamp prefix="timeS"/>
		
		<touch file="${buildInfoFile}"/>
		<echo file="${buildInfoFile}" message="Ant version used to do this build: ${line.separator}"/>
		<echo file="${buildInfoFile}" append="yes" message="${ant.version} ${line.separator} ${line.separator}"/>
		<echo file="${buildInfoFile}" append="yes" message="Project Dependencies: ${line.separator}"/>
		<echo file="${buildInfoFile}" append="yes" message="${project.path} ${line.separator} ${line.separator}"/>
		<echo file="${buildInfoFile}" append="yes" message=" -NtdpsWebServiceAPI version used: ${line.separator}"/>
		<echo file="${buildInfoFile}" append="yes" message="	${ntdps.svn.url}${line.separator}"/>
		<echo file="${buildInfoFile}" append="yes" message=" -SnadisCommonForNtdps version used: ${line.separator}"/>
		<echo file="${buildInfoFile}" append="yes" message="    ${snadis.svn.url} ${line.separator}"/>
		<echo file="${buildInfoFile}" append="yes" message="MMR Version:${line.separator} -${mmr.svn.url}${line.separator}"/>
		<echo file="${buildInfoFile}" append="yes" message="Runtime Dependencies: ${line.separator}"/>
		<echo file="${buildInfoFile}" append="yes" message=" -JDK version: ${jdk.version}${line.separator}"/>
		<echo file="${buildInfoFile}" append="yes" message=" -JBoss Version: ${jboss.version}${line.separator}"/>
		
		<echo file="${buildInfoFile}" append="yes" message=" -Build by: ${svn.username}${line.separator}"/>
		<echo file="${buildInfoFile}" append="yes" message=" -Build on: ${timeS.TODAY} ${timeS.TSTAMP}${line.separator}"/> 
		
		<pathconvert pathsep="${line.separator} - " property="jarFiles" refid="classpath">
			<mapper type="flatten"/>
		</pathconvert>
		
		
		<echo file="${buildInfoFile}" append="yes" message="Compile Dependencies for ${ant.project.name}:${line.separator} -"/>
		<echo file="${buildInfoFile}" message="   ${jarFiles}" append="yes"/>
		<echo file="${buildInfoFile}" append="yes" message="${line.separator} ${line.separator}********MMR build file**************${line.separator}"/>
		
		<mkdir dir="${mmrWar}"/>
		<mkdir dir="${mmrOutput}"/>
	</target>
	
	
	<target name="checkSrc">
		<condition property="checkedSrc">
				<available file="${mmrSrc}" type="dir"/>
		</condition>
		<antcall target="failIfNoSrc"/>
		<fileset dir="${mmrSrc}" id="javaFiles">
			<filename name="**/*.java"/>
		</fileset>
		
		<!-- pathconvert will set the property fileSetNotEmpty only if the javaFiles property is not empty
		then the fail if no java files target will be tried to be executed but it will only be executed if
		the property is not set, which means that the javaFiles property is empty
		-->
		<pathconvert refid="javaFiles" property="fileSetNotEmpty" setonempty="false"/>
		
		<antcall target="failIfNoJavaFiles"/>
	</target>
	
	<target name="failIfNoSrc" unless="checkedSrc">
		<delete file="${buildInfoFile}"/>
		<propertyfile file="${build.prop.dir}/build.properties">
			<entry key="build.info" value="${workspace.dir}/buildInfo"/>
		</propertyfile>
		<input message="MMR source folder does not exist in the current directory, stoping build"/>
		<fail message="EDVR source folder does not exist in the current directory"/>
	</target>
	
	<target name="failIfNoJavaFiles" unless="fileSetNotEmpty">
		<delete file="${buildInfoFile}"/>
		<propertyfile file="${build.prop.dir}/build.properties">
			<entry key="build.info" value="${workspace.dir}/buildInfo"/>
		</propertyfile>
		<input message="MMR source folder is empty, there are no .java files to compile, stopping build"/>
		<fail message="MMR source folder is empty, there are no .java files to compile"/>
	</target>
	
	<target name="compile" depends="init,checkSrc">
		<record name="${buildInfoFile}" action="start" append="yes"/>
			<javac srcdir="${mmrSrc}" destdir="${mmrOutput}" fork="yes" executable="${jdk.location}" target="${javac.target}" source="${javac.target}">
				<classpath refid="classpath" /> 
			</javac>
		<record name="${buildInfoFile}" action="stop"/>		
	</target>
	
	
	<target name="createLibDir" depends="compile">
		<mkdir dir="${libDir}"/>
		<copy todir="${libDir}">
			<fileset dir="${commonLib}/apache-ant">
				  <exclude name="jaxrpc.jar" /> 
				  <exclude name="org.apache.*.*" /> 
			</fileset>
			<fileset dir="${mmrLib}"/>
			<fileset file="${ntdps.jar}"/>
			<fileset file="${snadis.jar}"/>
		</copy>
	</target>
	
	<!--check the case of mmr in jboss it is case sensitive -->
	<target name="createWar" depends="clean,init,createLibDir">
		<record name="${buildInfoFile}" action="start" append="yes"/>
			<war destfile="${dest.dir}/mmr.war" webxml="${webXML}/web.xml">
				<fileset dir="${webDir}"></fileset>
				<fileset file="${buildInfoFile}"/>
				<fileset file="${ntdpsBuildInfo}"/>
				<fileset file="${snadisBuildInfo}"/>
				<classes dir="${mmrOutput}"/>
			</war>
		<record name="${buildInfoFile}" action="stop"/>	
	</target>

	<target name="minor" if="${minor.version}">
		<math result="minor" operand1="${minor}" operation="+" operand2="1" datatype="int"/>
	</target>
	
	<target name="patch" if="${patch.version}">
		<math result="patch" operand1="${patch}" operation="+" operand2="1" datatype="int"/>
	</target>

	<target name="buildNumber" depends="minor,patch">
		<math result="bNumber" operand1="${build.number}" operation="+" operand2="1" datatype="int"/>
		<property name="buildInfoFile" value="${build.info}/mmr_v${build.major.version}-${minor}-${patch}-${bNumber}.txt"/>
	</target>

</project>